
IF NOT EXISTS (
  SELECT
    *
  FROM
    INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = '[dbo].[GIBS_FBxMas]' AND COLUMN_NAME = 'XmasGift1')
BEGIN
  ALTER TABLE [dbo].GIBS_FBxMas
    ADD XmasGift1 varchar(50) NULL
END

GO

IF NOT EXISTS (
  SELECT
    *
  FROM
    INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = '[dbo].[GIBS_FBxMas]' AND COLUMN_NAME = 'XmasGift2')
BEGIN
  ALTER TABLE [dbo].GIBS_FBxMas
    ADD XmasGift2 varchar(50) NULL
END

GO

IF NOT EXISTS (
  SELECT
    *
  FROM
    INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = '[dbo].[GIBS_FBxMas]' AND COLUMN_NAME = 'XmasGift1Size')
BEGIN
  ALTER TABLE [dbo].GIBS_FBxMas
    ADD XmasGift1Size varchar(50) NULL
END

GO


IF NOT EXISTS (
  SELECT
    *
  FROM
    INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = '[dbo].[GIBS_FBxMas]' AND COLUMN_NAME = 'XmasGift2Size')
BEGIN
  ALTER TABLE [dbo].GIBS_FBxMas
    ADD XmasGift2Size varchar(50) NULL
END

GO

IF NOT EXISTS (
  SELECT
    *
  FROM
    INFORMATION_SCHEMA.COLUMNS
  WHERE
    TABLE_NAME = '[dbo].[GIBS_FBxMas]' AND COLUMN_NAME = 'XmasGiftRecordID')
BEGIN
  ALTER TABLE [dbo].GIBS_FBxMas
    ADD XmasGiftRecordID varchar(40) NULL
END

GO




/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_PrintTickets]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_PrintTickets]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_PrintTickets]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_PrintTicket]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_PrintTicket]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_PrintTicket]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_DeleteRecord]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_DeleteRecord]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_DeleteRecord]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_SSRS_XmasToySignups]    Script Date: 10/23/2023 6:05:55 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_SSRS_XmasToySignups]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_SSRS_XmasToySignups]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_SSRS_XmasToySignups]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE  [dbo].[GIBS_FBReports_SSRS_XmasToySignups] 
( 
	@StartDate date,
	@EndDate date,
	@xMasYear int
)
AS

 
begin 

--Declare @StartDate date, @EndDate date

--Set @StartDate = '11/20/2017'

--Set @EndDate = '12/01/2017'

SELECT [xMasID]
      ,[ClientID]
      ,[ClAddFamMemID]
      ,[xMasYear]
      ,[Sizes] as xMasSizes
	   ,[XmasNotes]
      ,[BikeRaffle]

	  ,cast([BikeAwardedDate] AS Varchar(10)) AS [BikeAwardedDate]
      ,[WantsToys]
      ,[VerifiedToys]
     -- ,[ReceivedToysDate]
	  ,cast([ReceivedToysDate] AS Varchar(10)) AS [ReceivedToysDate]
      ,[CreatedOnDate]
  --    ,[CreatedByUserID]
  --    ,[LastModifiedByUserID]
      ,[LastModifiedOnDate]
     
  FROM [dbo].[GIBS_FBxMas] 
  Where 
  
  --[xMasYear] = Datepart(year,@StartDate) AND
    [xMasYear] = @xMasYear AND
  (([LastModifiedOnDate] between @StartDate and @EndDate) OR ([CreatedOnDate] between @StartDate and @EndDate))

end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_DeleteRecord]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_DeleteRecord]

	@XMasID int
	

as
BEGIN 

DELETE FROM [dbo].[GIBS_FBxMas]
 WHERE xMasID = @XMasID
  
		


END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]
	-- Add the parameters for the stored procedure here
	@clAddFamMemID int,
	@xMasYear int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT [xMasID]
      ,[GIBS_FBxMas].[ClientID]
      ,[GIBS_FBxMas].[ClAddFamMemID]
      ,[xMasYear]
      ,[Sizes] AS XmasSizes
      ,[BikeRaffle]
      ,[BikeAwardedDate]
      ,[WantsToys]
      ,[VerifiedToys]
      ,[ReceivedToysDate]
      ,[GIBS_FBxMas].[CreatedOnDate]
      ,[GIBS_FBxMas].[CreatedByUserID]
      ,[GIBS_FBxMas].[LastModifiedByUserID]
      ,[GIBS_FBxMas].[LastModifiedOnDate]
	  ,[XmasNotes], xMasGift1, xMasGift2, xMasGift1Size, xMasGift2Size, xMasGiftRecordID
	  ,cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,[GIBS_FBxMas].[CreatedOnDate]) as int) AS AFM_Age
	  , (Select max(BikeAwardedDate) from [GIBS_FBxMas] px where px.ClAddFamMemID = [GIBS_FBxMas].[ClAddFamMemID] ) AS PastWin

  FROM [dbo].[GIBS_FBxMas] 
  inner join GIBS_FBClientsAddFamMem on [GIBS_FBxMas].ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID
  --left outer join Users on GIBS_FBClientsAddFamMem.LastModifiedByUserID = Users.UserId
  WHERE [GIBS_FBxMas].ClAddFamMemID = @clAddFamMemID AND xMasYear = @xMasYear

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]
	-- Add the parameters for the stored procedure here
	@clAddFamMemID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT [xMasID]
      ,[ClientID]
      ,[ClAddFamMemID]
      ,[xMasYear]
      ,[Sizes] as xMasSizes
      ,[BikeRaffle]
      
	--  ,CASE WHEN ISDATE(CONVERT(VARCHAR(10),[BikeAwardedDate])) = 1 THEN CONVERT(DATE,[BikeAwardedDate]) ELSE NULL end AS [BikeAwardedDate]

	  
--	  CASE 
--WHEN [BikeAwardedDate] > '01-01-1901' THEN [BikeAwardedDate]
--ELSE NULL
--END AS [BikeAwardedDate]

	  ,cast([BikeAwardedDate] AS Varchar(10)) AS [BikeAwardedDate]
      ,[WantsToys]
      ,[VerifiedToys]
     -- ,[ReceivedToysDate]
	  ,cast([ReceivedToysDate] AS Varchar(10)) AS [ReceivedToysDate]
      ,[CreatedOnDate]
      ,[CreatedByUserID]
      ,[LastModifiedByUserID]
      ,[LastModifiedOnDate]
      ,[XmasNotes]
	  ,xMasGift1, xMasGift2, xMasGift1Size, xMasGift2Size, xMasGiftRecordID
  FROM [dbo].[GIBS_FBxMas] 
  Where [ClAddFamMemID] = @clAddFamMemID
  --15323
  order by [xMasYear] DESC

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/31/2017
-- Description:	Insert Xmas Record
-- =============================================
CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]
	-- Add the parameters for the stored procedure here
	@ClientID int,
	@clAddFamMemID int,
	@xMasYear int,
	@Sizes varchar(500),
	@BikeRaffle bit,
	@BikeAwardedDate datetime,
	@WantsToys bit,
	@VerifiedToys bit,
	@ReceivedToysDate datetime,
	@LastModifiedByUserID int,
	@XmasNotes varchar(500),
	@XmasGift1 varchar(50),
	@XmasGift2 varchar(50),
	@XmasGift1Size varchar(50),
	@XmasGift2Size varchar(50),
	@XmasGiftRecordID varchar(40)
AS

--Declare @xMasID int

BEGIN
    IF EXISTS (SELECT 1 FROM [dbo].[GIBS_FBxMas]
        WHERE ([ClAddFamMemID] = @clAddFamMemID) AND ( [xMasYear] = @xMasYear) 	
    )
    BEGIN

UPDATE [dbo].[GIBS_FBxMas]
   SET 

      [Sizes] = @Sizes
      ,[BikeRaffle] = @BikeRaffle
      ,[BikeAwardedDate] = @BikeAwardedDate
      ,[WantsToys] = @WantsToys
      ,[VerifiedToys] = @VerifiedToys
      ,[ReceivedToysDate] = @ReceivedToysDate
      ,[LastModifiedByUserID] = @LastModifiedByUserID
      ,[LastModifiedOnDate] = GetDate()
	  ,[XmasNotes] = @XmasNotes
	  ,XmasGift1 = @XmasGift1
	   ,XmasGift2 = @XmasGift2
	   , XmasGift1Size = @XmasGift1Size
	   , XmasGift2Size = @XmasGift2Size
	   ,XmasGiftRecordID = @XmasGiftRecordID

  WHERE ([ClAddFamMemID] = @clAddFamMemID) AND ( [xMasYear] = @xMasYear)
      
	  Select xMasID FROM [dbo].[GIBS_FBxMas] 
	  WHERE ([ClAddFamMemID] = @clAddFamMemID) AND ( [xMasYear] = @xMasYear) 
	      
    END



ELSE
    BEGIN
        	SET NOCOUNT ON;

    -- Insert statements for procedure here
INSERT INTO [dbo].[GIBS_FBxMas]
           (
           [ClientID]
           ,[ClAddFamMemID]
           ,[xMasYear]
           ,[Sizes]
           ,[BikeRaffle]
           ,[BikeAwardedDate]
           ,[WantsToys]
           ,[VerifiedToys]
           ,[ReceivedToysDate]
           ,[CreatedOnDate]
           ,[CreatedByUserID]
           ,[LastModifiedByUserID]
           ,[LastModifiedOnDate]
		   ,[XmasNotes]
		   ,XmasGift1
		   ,XmasGift2
		   ,XmasGift1Size
		   ,XmasGift2Size
		   ,XmasGiftRecordID
		   )
     VALUES
     (
           @ClientID
           ,@clAddFamMemID
           ,@xMasYear
           ,@Sizes
           ,@BikeRaffle
           ,@BikeAwardedDate
           ,@WantsToys
           ,@VerifiedToys
           ,@ReceivedToysDate
           ,GetDate()
           ,@LastModifiedByUserID
           ,@LastModifiedByUserID
           ,GetDate()
		   ,@XmasNotes
		   ,@XmasGift1
		   ,@XmasGift2
		   ,@XmasGift1Size
		   ,@XmasGift2Size
		  , @XmasGiftRecordID
      )

select xMasID = SCOPE_IDENTITY() 
    END

		
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_PrintTicket]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_PrintTicket]
	-- Add the parameters for the stored procedure here
	@ClientID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


SELECT     
		 GIBS_FBClientsAddFamMem.ClAddFamMemID, 
		 ClAddFamMemFirstName, 
		 ClAddFamMemLastName, 
		 ClAddFamMemDOB, 
		 AFMRelationship,
		 GIBS_FBClientsAddFamMem.ClientID, 


		 cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) AS AFM_Age, 
		
		-- returning LastModifiedByUserName (see join below)
		'LastModifiedByUserName' = Users.FirstName + ' ' + Users.LastName,
		AFMMiddleInitial,
		AFMSuffix,
		AFMDOBVerify,
		AFMGender,
		WantsToys,
		GIBS_FBxMas.Sizes as xMasSizes,
		bikeRaffle,
		
		QualifiedToys = cast((CASE 
		 WHEN cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) < 15 THEN 1 
		 ELSE 0 
		 END) as bit),
		 
		 VerifiedToys 
		 
		from GIBS_FBClientsAddFamMem
		left outer join Users on GIBS_FBClientsAddFamMem.LastModifiedByUserID = Users.UserId
		
		left outer join GIBS_FBxMas on GIBS_FBxMas.ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID
		
		where  GIBS_FBClientsAddFamMem.ClientID = @ClientID and VerifiedToys = 1 and XmasYear = year(getdate())


		order by ClAddFamMemDOB desc


END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]
	-- Add the parameters for the stored procedure here
	@xMasID int,
	@XmasSizes varchar(500),
	@BikeRaffle bit,
	@BikeAwardedDate datetime,
	@WantsToys bit,
	@VerifiedToys bit,
	@ReceivedToysDate datetime,
	@LastModifiedByUserID int,
	@XmasNotes varchar(500),
	@XmasGift1 varchar(50),
	@XmasGift2 varchar(50),
	@XmasGift1Size varchar(50),
	@XmasGift2Size varchar(50),
	@XmasGiftRecordID varchar(40)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
UPDATE [dbo].[GIBS_FBxMas]
   SET 

      [Sizes] = @XmasSizes
      ,[BikeRaffle] = @BikeRaffle
      ,[BikeAwardedDate] = @BikeAwardedDate
      ,[WantsToys] = @WantsToys
      ,[VerifiedToys] = @VerifiedToys
      ,[ReceivedToysDate] = @ReceivedToysDate
      ,[LastModifiedByUserID] = @LastModifiedByUserID
      ,[LastModifiedOnDate] = GetDate()
	  ,[XmasNotes] = @XmasNotes 
	  ,XmasGift1 = @XmasGift1
	   ,XmasGift2 = @XmasGift2
	   , XmasGift1Size = @XmasGift1Size
	   , XmasGift2Size = @XmasGift2Size
	   ,XmasGiftRecordID = @XmasGiftRecordID
  WHERE xMasID = @xMasID

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_PrintTickets]    Script Date: 10/23/2023 6:05:55 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GIBS_FBxMas_PrintTickets]
	-- Add the parameters for the stored procedure here
	@StartDate Date,
	@EndDate Date, 	
	@xMasYear int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
Declare 	@LOCStartDate date,
	@LOCEndDate date,
	@LOCxMasYear int

	Set @LOCStartDate =  @StartDate
	SET @LOCEndDate = @EndDate
	Set @LOCxMasYear = @xMasYear


SELECT * FROM (


SELECT
[xMasID],
Cast([xMasID] AS Varchar(10)) + 'A' AS GiftNumber
      ,[GIBS_FBxMas].[ClientID]
      ,[GIBS_FBxMas].[ClAddFamMemID]
	   ,GIBS_FBClientsAddFamMem.ClAddFamMemFirstName AS FirstName
	    ,CASE GIBS_FBClientsAddFamMem.AFMGender
        WHEN 'Male' THEN 'Boy'
		 WHEN 'Female' THEN 'Girl'
        ELSE GIBS_FBClientsAddFamMem.AFMGender
    END AS Gender
	
	    ,GIBS_FBClients.ClientLastName AS ClientLastName
      ,[xMasYear]
 
	  ,[XmasNotes], xMasGift2 AS Gift,  xMasGift2Size AS GiftSize

	 ,cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,[GIBS_FBxMas].[CreatedOnDate]) as int) AS AFM_Age
	 -- , (Select max(BikeAwardedDate) from [GIBS_FBxMas] px where px.ClAddFamMemID = [GIBS_FBxMas].[ClAddFamMemID] ) AS PastWin

  FROM [dbo].[GIBS_FBxMas] 
  inner join GIBS_FBClientsAddFamMem on [GIBS_FBxMas].ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID
  inner join GIBS_FBClients on [GIBS_FBxMas].ClientID = GIBS_FBClients.ClientID
  
  WHERE  xMasYear = @LOCxMasYear
  AND
   
  (([GIBS_FBxMas].[LastModifiedOnDate] between @LOCStartDate and @LOCEndDate) OR ([GIBS_FBxMas].[CreatedOnDate] between @LOCStartDate and @LOCEndDate))
--  ORDER BY [xMasID]

  Union All

  SELECT
  
 [xMasID],
Cast([xMasID] AS Varchar(10)) + 'B' AS GiftNumber
      ,[GIBS_FBxMas].[ClientID]
      ,[GIBS_FBxMas].[ClAddFamMemID]
	  ,GIBS_FBClientsAddFamMem.ClAddFamMemFirstName AS FirstName
	  , 
	  CASE GIBS_FBClientsAddFamMem.AFMGender
        WHEN 'Male' THEN 'Boy'
		 WHEN 'Female' THEN 'Girl'
        ELSE GIBS_FBClientsAddFamMem.AFMGender
    END AS Gender
	 
	  ,GIBS_FBClients.ClientLastName AS ClientLastName
      ,[xMasYear]
	  ,[XmasNotes], xMasGift1 AS Gift,  xMasGift1Size AS GiftSize
	 
	 ,cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,[GIBS_FBxMas].[CreatedOnDate]) as int) AS AFM_Age
	

  FROM [dbo].[GIBS_FBxMas] 
  inner join GIBS_FBClientsAddFamMem on [GIBS_FBxMas].ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID
  inner join GIBS_FBClients on [GIBS_FBxMas].ClientID = GIBS_FBClients.ClientID
  WHERE  xMasYear = @LOCxMasYear
  AND
   
   (([GIBS_FBxMas].[LastModifiedOnDate] between @LOCStartDate and @LOCEndDate) OR ([GIBS_FBxMas].[CreatedOnDate] between @LOCStartDate and @LOCEndDate))

  ) ResultTable ORDER BY  [xMasID]
 -- ORDER BY [xMasID]


      -- ,[Sizes] AS XmasSizes
    --  ,[BikeRaffle]
    --  ,[BikeAwardedDate]
    --  ,[WantsToys]
     -- ,[VerifiedToys]
    --  ,[ReceivedToysDate]
   --   ,[GIBS_FBxMas].[CreatedOnDate]
   --   ,[GIBS_FBxMas].[CreatedByUserID]
    --  ,[GIBS_FBxMas].[LastModifiedByUserID]
   --   ,[GIBS_FBxMas].[LastModifiedOnDate]
   --,  xMasGiftRecordID

END
GO


