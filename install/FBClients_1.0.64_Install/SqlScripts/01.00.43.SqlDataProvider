IF COL_LENGTH('GIBS_FBxMas','XmasNotes') IS NULL
 BEGIN
  /*COLUMN DOES NOT EXIST OR CALLER DOES NOT HAVE PERMISSION TO VIEW THE OBJECT*/
 ALTER TABLE GIBS_FBxMas ADD XmasNotes varchar(500) NULL

 END

-- GO

-- UPDATE GIBS_FBxMas SET XmasNotes = Sizes
-- GO
-- UPDATE GIBS_FBxMas SET Sizes = null

GO




/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]    Script Date: 3/21/2018 12:38:13 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_PrintTicket]    Script Date: 3/21/2018 12:38:13 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_PrintTicket]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_PrintTicket]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]    Script Date: 3/21/2018 12:38:13 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]    Script Date: 3/21/2018 12:38:13 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]    Script Date: 3/21/2018 12:38:13 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]    Script Date: 3/21/2018 12:38:13 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear] AS' 
END
GO



-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
ALTER PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_CurrentYear]
	-- Add the parameters for the stored procedure here
	@clAddFamMemID int,
	@xMasYear int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT [xMasID]
      ,[GIBS_FBxMas].[ClientID]
      ,[GIBS_FBxMas].[ClAddFamMemID]
      ,[xMasYear]
      ,[Sizes] AS XmasSizes
      ,[BikeRaffle]
      ,[BikeAwardedDate]
      ,[WantsToys]
      ,[VerifiedToys]
      ,[ReceivedToysDate]
      ,[GIBS_FBxMas].[CreatedOnDate]
      ,[GIBS_FBxMas].[CreatedByUserID]
      ,[GIBS_FBxMas].[LastModifiedByUserID]
      ,[GIBS_FBxMas].[LastModifiedOnDate]
	  ,[XmasNotes]
	  ,cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,[GIBS_FBxMas].[CreatedOnDate]) as int) AS AFM_Age

  FROM [dbo].[GIBS_FBxMas] 
  inner join GIBS_FBClientsAddFamMem on [GIBS_FBxMas].ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID
  --left outer join Users on GIBS_FBClientsAddFamMem.LastModifiedByUserID = Users.UserId
  WHERE [GIBS_FBxMas].ClAddFamMemID = @clAddFamMemID AND xMasYear = @xMasYear

END


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]    Script Date: 3/21/2018 12:38:13 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID] AS' 
END
GO




-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
ALTER PROCEDURE [dbo].[GIBS_FBxMas_AFM_Get_History_By_AFM_ID]
	-- Add the parameters for the stored procedure here
	@clAddFamMemID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT [xMasID]
      ,[ClientID]
      ,[ClAddFamMemID]
      ,[xMasYear]
      ,[Sizes] as xMasSizes
      ,[BikeRaffle]
      
	--  ,CASE WHEN ISDATE(CONVERT(VARCHAR(10),[BikeAwardedDate])) = 1 THEN CONVERT(DATE,[BikeAwardedDate]) ELSE NULL end AS [BikeAwardedDate]

	  
--	  CASE 
--WHEN [BikeAwardedDate] > '01-01-1901' THEN [BikeAwardedDate]
--ELSE NULL
--END AS [BikeAwardedDate]

	  ,cast([BikeAwardedDate] AS Varchar(10)) AS [BikeAwardedDate]
      ,[WantsToys]
      ,[VerifiedToys]
     -- ,[ReceivedToysDate]
	  ,cast([ReceivedToysDate] AS Varchar(10)) AS [ReceivedToysDate]
      ,[CreatedOnDate]
      ,[CreatedByUserID]
      ,[LastModifiedByUserID]
      ,[LastModifiedOnDate]
      ,[XmasNotes]
  FROM [dbo].[GIBS_FBxMas] 
  Where [ClAddFamMemID] = @clAddFamMemID
  --15323
  order by [xMasYear] DESC

END




GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]    Script Date: 3/21/2018 12:38:13 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear] AS' 
END
GO





-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/31/2017
-- Description:	Insert Xmas Record
-- =============================================
ALTER PROCEDURE [dbo].[GIBS_FBxMas_AFM_Insert_CurrentYear]
	-- Add the parameters for the stored procedure here
	@ClientID int,
	@clAddFamMemID int,
	@xMasYear int,
	@Sizes varchar(500),
	@BikeRaffle bit,
	@BikeAwardedDate datetime,
	@WantsToys bit,
	@VerifiedToys bit,
	@ReceivedToysDate datetime,
	@LastModifiedByUserID int,
	@XmasNotes varchar(500)
	
AS

--Declare @xMasID int

BEGIN
    IF EXISTS (SELECT 1 FROM [dbo].[GIBS_FBxMas]
        WHERE ([ClAddFamMemID] = @clAddFamMemID) AND ( [xMasYear] = @xMasYear) 	
    )
    BEGIN

UPDATE [dbo].[GIBS_FBxMas]
   SET 

      [Sizes] = @Sizes
      ,[BikeRaffle] = @BikeRaffle
      ,[BikeAwardedDate] = @BikeAwardedDate
      ,[WantsToys] = @WantsToys
      ,[VerifiedToys] = @VerifiedToys
      ,[ReceivedToysDate] = @ReceivedToysDate
      ,[LastModifiedByUserID] = @LastModifiedByUserID
      ,[LastModifiedOnDate] = GetDate()
	  ,[XmasNotes] = @XmasNotes
  WHERE ([ClAddFamMemID] = @clAddFamMemID) AND ( [xMasYear] = @xMasYear)
      
	  Select xMasID FROM [dbo].[GIBS_FBxMas] 
	  WHERE ([ClAddFamMemID] = @clAddFamMemID) AND ( [xMasYear] = @xMasYear) 
	      
    END



ELSE
    BEGIN
        	SET NOCOUNT ON;

    -- Insert statements for procedure here
INSERT INTO [dbo].[GIBS_FBxMas]
           (
           [ClientID]
           ,[ClAddFamMemID]
           ,[xMasYear]
           ,[Sizes]
           ,[BikeRaffle]
           ,[BikeAwardedDate]
           ,[WantsToys]
           ,[VerifiedToys]
           ,[ReceivedToysDate]
           ,[CreatedOnDate]
           ,[CreatedByUserID]
           ,[LastModifiedByUserID]
           ,[LastModifiedOnDate]
		   ,[XmasNotes])
     VALUES
     (
           @ClientID
           ,@clAddFamMemID
           ,@xMasYear
           ,@Sizes
           ,@BikeRaffle
           ,@BikeAwardedDate
           ,@WantsToys
           ,@VerifiedToys
           ,@ReceivedToysDate
           ,GetDate()
           ,@LastModifiedByUserID
           ,@LastModifiedByUserID
           ,GetDate()
		   ,@XmasNotes
      )

select xMasID = SCOPE_IDENTITY() 
    END

		
END







GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_PrintTicket]    Script Date: 3/21/2018 12:38:13 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_PrintTicket]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_PrintTicket] AS' 
END
GO

-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
ALTER PROCEDURE [dbo].[GIBS_FBxMas_AFM_PrintTicket]
	-- Add the parameters for the stored procedure here
	@ClientID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


SELECT     
		 GIBS_FBClientsAddFamMem.ClAddFamMemID, 
		 ClAddFamMemFirstName, 
		 ClAddFamMemLastName, 
		 ClAddFamMemDOB, 
		 AFMRelationship,
		 GIBS_FBClientsAddFamMem.ClientID, 


		 cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) AS AFM_Age, 
		
		-- returning LastModifiedByUserName (see join below)
		'LastModifiedByUserName' = Users.FirstName + ' ' + Users.LastName,
		AFMMiddleInitial,
		AFMSuffix,
		AFMDOBVerify,
		AFMGender,
		WantsToys,
		GIBS_FBxMas.Sizes as xMasSizes,
		bikeRaffle,
		
		QualifiedToys = cast((CASE 
		 WHEN cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) < 15 THEN 1 
		 ELSE 0 
		 END) as bit),
		 
		 VerifiedToys 
		 
		from GIBS_FBClientsAddFamMem
		left outer join Users on GIBS_FBClientsAddFamMem.LastModifiedByUserID = Users.UserId
		
		left outer join GIBS_FBxMas on GIBS_FBxMas.ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID
		
		where  GIBS_FBClientsAddFamMem.ClientID = @ClientID and VerifiedToys = 1 and XmasYear = year(getdate())


		order by ClAddFamMemDOB desc


END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]    Script Date: 3/21/2018 12:38:13 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear] AS' 
END
GO



-- =============================================
-- Author:		Joseph Aucoin
-- Create date: 10/01/2014
-- Description:	Get selected AFM Record
-- =============================================
ALTER PROCEDURE [dbo].[GIBS_FBxMas_AFM_Update_CurrentYear]
	-- Add the parameters for the stored procedure here
	@xMasID int,
	@XmasSizes varchar(500),
	@BikeRaffle bit,
	@BikeAwardedDate datetime,
	@WantsToys bit,
	@VerifiedToys bit,
	@ReceivedToysDate datetime,
	@LastModifiedByUserID int,
	@XmasNotes varchar(500)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
UPDATE [dbo].[GIBS_FBxMas]
   SET 

      [Sizes] = @XmasSizes
      ,[BikeRaffle] = @BikeRaffle
      ,[BikeAwardedDate] = @BikeAwardedDate
      ,[WantsToys] = @WantsToys
      ,[VerifiedToys] = @VerifiedToys
      ,[ReceivedToysDate] = @ReceivedToysDate
      ,[LastModifiedByUserID] = @LastModifiedByUserID
      ,[LastModifiedOnDate] = GetDate()
	  ,[XmasNotes] = @XmasNotes 
  WHERE xMasID = @xMasID

END


GO



/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Update]    Script Date: 3/21/2018 12:40:19 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_Update]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBClients_AFM_Update]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_List]    Script Date: 3/21/2018 12:40:19 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_List]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBClients_AFM_List]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Insert]    Script Date: 3/21/2018 12:40:19 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_Insert]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBClients_AFM_Insert]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_GetByID]    Script Date: 3/21/2018 12:40:19 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_GetByID]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBClients_AFM_GetByID]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Delete]    Script Date: 3/21/2018 12:40:19 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_Delete]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBClients_AFM_Delete]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Delete]    Script Date: 3/21/2018 12:40:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_Delete]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_Delete] AS' 
END
GO





 ALTER PROCEDURE [dbo].[GIBS_FBClients_AFM_Delete]

	@ClAddFamMemID int
	

as
BEGIN 

DELETE FROM GIBS_FBClientsAddFamMem
WHERE     ( ClAddFamMemID  = @ClAddFamMemID)

		


END









GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_GetByID]    Script Date: 3/21/2018 12:40:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_GetByID]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_GetByID] AS' 
END
GO


ALTER procedure [dbo].[GIBS_FBClients_AFM_GetByID]

	@ClAddFamMemID int

as
BEGIN 

	SELECT     
		ClAddFamMemID, 
		ClAddFamMemFirstName, 
		ClAddFamMemLastName, 
		ClAddFamMemDOB, 
		AFMRelationship,
		ClientID, 
		CreatedOnDate, 
		CreatedByUserID,
		LastModifiedByUserID, 
		LastModifiedOnDate,
		AFMMiddleInitial,
		AFMSuffix,
		AFMDOBVerify,
		AFMEthnicity,
		AFMGender,
		cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) AS AFM_Age
			
		From GIBS_FBClientsAddFamMem

		where  GIBS_FBClientsAddFamMem.ClAddFamMemID = @ClAddFamMemID
		

END

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Insert]    Script Date: 3/21/2018 12:40:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_Insert]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_Insert] AS' 
END
GO




ALTER PROCEDURE [dbo].[GIBS_FBClients_AFM_Insert] 
	
	@ClAddFamMemFirstName NVARCHAR(30),	
	@ClAddFamMemLastName NVARCHAR(30),
	@ClAddFamMemDOB date,
	@AFMRelationship NVARCHAR(25),
	@ClientID INT,
	@CreatedByUserID INT,
	@AFMMiddleInitial NVARCHAR(15),
	@AFMSuffix NVARCHAR(15),
	@AFMDOBVerify bit,
	@AFMEthnicity NVARCHAR(30),
	@AFMGender NVARCHAR(10)
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into  dbo.GIBS_FBClientsAddFamMem (
	 ClAddFamMemFirstName, 
	 ClAddFamMemLastName, 
	 ClAddFamMemDOB, 
	 AFMRelationship,
	 ClientID, 
	 CreatedOnDate,
	 LastModifiedOnDate ,
	 LastModifiedByUserID, 
	 CreatedByUserID,
	AFMMiddleInitial,
	AFMSuffix,
	AFMDOBVerify,
	AFMEthnicity,
	AFMGender
) 
values (
	@ClAddFamMemFirstName, 
	@ClAddFamMemLastName,  
	@ClAddFamMemDOB,
	@AFMRelationship, 
	@ClientID, 
	GETDATE(),
	GETDATE(),
	@CreatedByUserID,
	@CreatedByUserID,
	@AFMMiddleInitial,
	@AFMSuffix,
	@AFMDOBVerify,
	@AFMEthnicity,
	@AFMGender
)

select SCOPE_IDENTITY()
	
END



GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_List]    Script Date: 3/21/2018 12:40:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_List]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_List] AS' 
END
GO

ALTER procedure [dbo].[GIBS_FBClients_AFM_List]

	@ClientID int

as
BEGIN 

	SELECT     
		 ClAddFamMemID, 
		 ClAddFamMemFirstName, 
		 ClAddFamMemLastName, 
		 ClAddFamMemDOB, 
		 AFMRelationship,
		 GIBS_FBClientsAddFamMem.ClientID, 
		 GIBS_FBClientsAddFamMem.CreatedOnDate, 
		 GIBS_FBClientsAddFamMem.CreatedByUserID,
		 GIBS_FBClientsAddFamMem.LastModifiedByUserID, 
		 GIBS_FBClientsAddFamMem.LastModifiedOnDate,
		 -- call function to calculate age
		 cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) AS AFM_Age, 
		
		-- returning LastModifiedByUserName (see join below)
		'LastModifiedByUserName' = Users.FirstName + ' ' + Users.LastName,
		AFMMiddleInitial,
		AFMSuffix,
		AFMDOBVerify,
		AFMGender,
		VerifiedToys = COALESCE((select VerifiedToys from GIBS_FBxMas 
							Where XmasYear = year(getdate()) and GIBS_FBxMas.ClAddFamMemID = GIBS_FBClientsAddFamMem.ClAddFamMemID),0),
		
		QualifiedToys = cast((CASE 
		 WHEN cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) < 15 THEN 1 
		 ELSE 0 
		 END) as bit)
		 
		from GIBS_FBClientsAddFamMem
		left outer join Users on GIBS_FBClientsAddFamMem.LastModifiedByUserID = Users.UserId
		
		where  GIBS_FBClientsAddFamMem.ClientID = @ClientID
		order by ClAddFamMemDOB desc

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Update]    Script Date: 3/21/2018 12:40:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBClients_AFM_Update]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_Update] AS' 
END
GO




 ALTER PROCEDURE [dbo].[GIBS_FBClients_AFM_Update] 
	
	@ClAddFamMemID INT,
	@ClAddFamMemFirstName NVARCHAR(30),	
	@ClAddFamMemLastName NVARCHAR(30),
	@ClAddFamMemDOB date,
	@AFMRelationship NVARCHAR(25),
	@ClientID INT,
	@LastModifiedByUserID INT,
	@AFMMiddleInitial NVARCHAR(15),
	@AFMSuffix NVARCHAR(15),
	@AFMDOBVerify bit,
	@AFMEthnicity NVARCHAR(30),
	@AFMGender NVARCHAR(10)
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

UPDATE    GIBS_FBClientsAddFamMem
	SET              
	ClAddFamMemFirstName = @ClAddFamMemFirstName, 
	ClAddFamMemLastName = @ClAddFamMemLastName, 
	ClAddFamMemDOB = @ClAddFamMemDOB, 
	AFMRelationship = @AFMRelationship, 
	ClientID = @ClientID, 
	LastModifiedOnDate = GETDATE(), 
	LastModifiedByUserID = @LastModifiedByUserID,
	AFMMiddleInitial = @AFMMiddleInitial,
	AFMSuffix = @AFMSuffix,
	AFMDOBVerify = @AFMDOBVerify,
	AFMEthnicity = @AFMEthnicity,
	AFMGender = @AFMGender
	
WHERE
	ClAddFamMemID = @ClAddFamMemID


	
END



GO


