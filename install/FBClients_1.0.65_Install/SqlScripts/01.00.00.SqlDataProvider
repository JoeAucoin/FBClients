/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/** Create Table **/




/****** Object:  Table [dbo].[GIBS_FBClients]    Script Date: 01/27/2013 12:00:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[GIBS_FBClients](
	[ClientID] [int] IDENTITY(1,1) NOT NULL,
	[ClientFirstName] [nvarchar](30) NULL,
	[ClientMiddleInitial] [nvarchar](15) NULL,
	[ClientLastName] [nvarchar](30) NULL,
	[ClientDOB] [date] NULL,
	[ClientAddress] [nvarchar](50) NULL,
	[ClientCity] [nvarchar](50) NULL,
	[ClientState] [nvarchar](20) NULL,
	[ClientZipCode] [nvarchar](10) NULL,
	[ClientEmailAddress] [nvarchar](50) NULL,
	[ClientIdCard] [nvarchar](50) NULL,
	[ClientPhone] [nvarchar](25) NULL,
	[ClientPhoneType] [nvarchar](25) NULL,
	[ClientCaseWorker] [int] NULL,
	[ModuleID] [int] NOT NULL,
	[CreatedOnDate] [datetime] NULL,
	[CreatedByUserID] [int] NOT NULL,
	[LastModifiedByUserID] [int] NULL,
	[LastModifiedOnDate] [datetime] NULL,
	[PortalID] [int] NULL,
 CONSTRAINT [PK_GIBS_FBClients] PRIMARY KEY CLUSTERED 
(
	[ClientID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



/****** Object:  Table [dbo].[GIBS_FBClientsAddFamMem]    Script Date: 01/27/2013 12:00:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[GIBS_FBClientsAddFamMem](
	[ClAddFamMemID] [int] IDENTITY(1,1) NOT NULL,
	[ClAddFamMemFirstName] [nvarchar](50) NULL,
	[ClAddFamMemLastName] [nvarchar](50) NULL,
	[ClAddFamMemDOB] [date] NULL,
	[AFMRelationship] [nvarchar](25) NULL,
	[ClientID] [int] NOT NULL,
	[CreatedOnDate] [datetime] NULL,
	[CreatedByUserID] [int] NOT NULL,
	[LastModifiedByUserID] [int] NULL,
	[LastModifiedOnDate] [datetime] NULL,
 CONSTRAINT [PK_GIBS_FBClientsAddFamMem] PRIMARY KEY CLUSTERED 
(
	[ClAddFamMemID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



/****** Object:  Table [dbo].[GIBS_FBClientsIncomeAndExpense]    Script Date: 01/27/2013 12:00:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[GIBS_FBClientsIncomeAndExpense](
	[IeID] [int] IDENTITY(1,1) NOT NULL,
	[IeType] [nvarchar](2) NULL,
	[IeDescription] [nvarchar](50) NULL,
	[IeAmount] [money] NULL,
	[ClientID] [int] NOT NULL,
	[CreatedOnDate] [datetime] NULL,
	[CreatedByUserID] [int] NOT NULL,
	[LastModifiedByUserID] [int] NULL,
	[LastModifiedOnDate] [datetime] NULL,
 CONSTRAINT [PK_GIBS_FBClientsIncomeAndExpense] PRIMARY KEY CLUSTERED 
(
	[IeID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]

GO



/****** Object:  Table [dbo].[GIBS_FBClientsVisits]    Script Date: 01/27/2013 12:00:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[GIBS_FBClientsVisits](
	[VisitID] [int] IDENTITY(1,1) NOT NULL,
	[VisitDate] [date] NOT NULL,
	[VisitNotes] [ntext] NULL,
	[VisitNumBags] [int] NULL,
	[ClientID] [int] NOT NULL,
	[CreatedOnDate] [datetime] NULL,
	[CreatedByUserID] [int] NOT NULL,
	[LastModifiedByUserID] [int] NULL,
	[LastModifiedOnDate] [datetime] NULL,
 CONSTRAINT [PK_GIBS_FBClientsVisits] PRIMARY KEY CLUSTERED 
(
	[VisitID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO


/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_GetByID]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[GIBS_FBClients_AFM_GetByID]

	@ClAddFamMemID int

as
BEGIN 

	SELECT     
		 ClAddFamMemID, 
		 ClAddFamMemFirstName, 
		 ClAddFamMemLastName, 
		 ClAddFamMemDOB, 
		 AFMRelationship,
		 ClientID, 
		 CreatedOnDate, 
		 CreatedByUserID,
		 LastModifiedByUserID, 
		 LastModifiedOnDate
		 -- call function to calculate age
		 --,cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) AS AFM_Age, 
		
		
From GIBS_FBClientsAddFamMem
		
		where  GIBS_FBClientsAddFamMem.ClAddFamMemID = @ClAddFamMemID
		

END






GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Insert]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_Insert] 
	
	@ClAddFamMemFirstName NVARCHAR(30),	
	@ClAddFamMemLastName NVARCHAR(30),
	@ClAddFamMemDOB date,
	@AFMRelationship NVARCHAR(25),
	@ClientID INT,
	@CreatedByUserID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into  dbo.GIBS_FBClientsAddFamMem (
	 ClAddFamMemFirstName, 
	 ClAddFamMemLastName, 
	 ClAddFamMemDOB, 
	 AFMRelationship,
	 ClientID, 
	 CreatedOnDate,
	 LastModifiedOnDate ,
	 CreatedByUserID

) 
values (
	@ClAddFamMemFirstName, 
	@ClAddFamMemLastName,  
	@ClAddFamMemDOB,
	@AFMRelationship, 
	@ClientID, 
	GETDATE(),
	GETDATE(),
	@CreatedByUserID
)

select SCOPE_IDENTITY()
	
END


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_List]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE procedure [dbo].[GIBS_FBClients_AFM_List]

	@ClientID int

as
BEGIN 

	SELECT     
		 ClAddFamMemID, 
		 ClAddFamMemFirstName, 
		 ClAddFamMemLastName, 
		 ClAddFamMemDOB, 
		 AFMRelationship,
		 GIBS_FBClientsAddFamMem.ClientID, 
		 GIBS_FBClientsAddFamMem.CreatedOnDate, 
		 GIBS_FBClientsAddFamMem.CreatedByUserID,
		 GIBS_FBClientsAddFamMem.LastModifiedByUserID, 
		 GIBS_FBClientsAddFamMem.LastModifiedOnDate,
		 -- call function to calculate age
		 cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as int) AS AFM_Age, 
		
		
		'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
		from GIBS_FBClientsAddFamMem
		left outer join Users on GIBS_FBClientsAddFamMem.CreatedByUserID = Users.UserId
		
		where  GIBS_FBClientsAddFamMem.ClientID = @ClientID
		order by ClAddFamMemDOB desc

END


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_AFM_Update]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GIBS_FBClients_AFM_Update] 
	
	@ClAddFamMemID INT,
	@ClAddFamMemFirstName NVARCHAR(30),	
	@ClAddFamMemLastName NVARCHAR(30),
	@ClAddFamMemDOB date,
	@AFMRelationship NVARCHAR(25),
	@ClientID INT,
	@LastModifiedByUserID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

UPDATE    GIBS_FBClientsAddFamMem
	SET              
	ClAddFamMemFirstName = @ClAddFamMemFirstName, 
	ClAddFamMemLastName = @ClAddFamMemLastName, 
	ClAddFamMemDOB = @ClAddFamMemDOB, 
	AFMRelationship = @AFMRelationship, 
	ClientID = @ClientID, 
	LastModifiedOnDate = GETDATE(), 
	LastModifiedByUserID = @LastModifiedByUserID
WHERE
	ClAddFamMemID = @ClAddFamMemID


	
END


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_GetByID]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


Create procedure [dbo].[GIBS_FBClients_GetByID]

	@PortalId int,
	@ClientID int

as
	SELECT
		ClientID,
		ClientFirstName, 
		ClientMiddleInitial, 
		ClientLastName, 
		ClientDOB, 
		ClientAddress, 
		ClientCity, 
		ClientState, 
		ClientZipCode, 
		ClientEmailAddress, 
		ClientIdCard, 
		ClientPhone, 
        ClientPhoneType, 
        ClientCaseWorker, 
        ModuleID, 
        CreatedOnDate, 
        CreatedByUserID, 
        LastModifiedByUserID, 
        LastModifiedOnDate, 
        PortalID

from dbo.GIBS_FBClients
where  PortalId = @PortalId and ClientID = @ClientID

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_IncomeExpense_Delete]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE procedure [dbo].[GIBS_FBClients_IncomeExpense_Delete]

	@IeID int
	

as
BEGIN 

DELETE FROM GIBS_FBClientsIncomeAndExpense
WHERE     (IeID = @IeID)

		


END







GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_IncomeExpense_GetByID]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE procedure [dbo].[GIBS_FBClients_IncomeExpense_GetByID]

	@IeID int

as
BEGIN 

	SELECT     
		IeID,
		IeType,
		IeDescription,
		IeAmount,
		ClientID, 
		CreatedOnDate, 
		CreatedByUserID,
		LastModifiedByUserID, 
		LastModifiedOnDate
		
		from GIBS_FBClientsIncomeAndExpense
		
		where  IeID = @IeID


END







GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_IncomeExpense_Insert]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[GIBS_FBClients_IncomeExpense_Insert] 
	
	@IeType nvarchar(2),
	@IeDescription nvarchar(50),
	@IeAmount money,
	@ClientID INT,
	

	
	@CreatedByUserID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;


INSERT INTO [dbo].[GIBS_FBClientsIncomeAndExpense]
           ([IeType]
           ,[IeDescription]
           ,[IeAmount]
           ,[ClientID]
           ,[CreatedOnDate]
           ,[CreatedByUserID]
           ,[LastModifiedByUserID]
           ,[LastModifiedOnDate])
     VALUES
     (
          @IeType,
          @IeDescription,
          @IeAmount,
          @ClientID,
          GetDate(),
          @CreatedByUserID,
          @CreatedByUserID,
          GetDate()
          
          )	



select SCOPE_IDENTITY()
	
END



GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_IncomeExpense_List]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE procedure [dbo].[GIBS_FBClients_IncomeExpense_List]

	@ClientID int,
	@IeType nvarchar(2)

as
BEGIN 

	SELECT     
		IeID,
		IeType,
		IeDescription,
		IeAmount,
		GIBS_FBClientsIncomeAndExpense.ClientID, 
		GIBS_FBClientsIncomeAndExpense.CreatedOnDate, 
		GIBS_FBClientsIncomeAndExpense.CreatedByUserID,
		GIBS_FBClientsIncomeAndExpense.LastModifiedByUserID, 
		GIBS_FBClientsIncomeAndExpense.LastModifiedOnDate,
		
		
		'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
		from GIBS_FBClientsIncomeAndExpense
		left outer join Users on GIBS_FBClientsIncomeAndExpense.CreatedByUserID = Users.UserId
		
		where  GIBS_FBClientsIncomeAndExpense.ClientID = @ClientID AND IeType = @IeType
		order by IeDescription asc

END



GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_IncomeExpense_Update]    Script Date: 01/27/2013 12:03:33 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




Create PROCEDURE [dbo].[GIBS_FBClients_IncomeExpense_Update] 
	
	@IeID int, 
	@IeType nvarchar(2),
	@IeDescription nvarchar(50),
	@IeAmount money,
	@ClientID INT,	
	@LastModifiedByUserID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;


	UPDATE    GIBS_FBClientsIncomeAndExpense
	SET              

	IeType = @IeType, 
	IeDescription = @IeDescription, 
	IeAmount = @IeAmount, 
	ClientID = @ClientID, 
	 
	LastModifiedByUserID = @LastModifiedByUserID, 
	LastModifiedOnDate = GETDATE()

	where IeID = @IeID
	
END



GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GIBS_FBClients_Insert] 
	
	@ClientFirstName NVARCHAR(30),
	@ClientMiddleInitial NVARCHAR(15),
	@ClientLastName NVARCHAR(30),
	@ClientDOB date,
	@ClientAddress NVARCHAR(50),
	@ClientCity NVARCHAR(50),
	@ClientState NVARCHAR(20),
	@ClientZipCode NVARCHAR(10),
	@ClientEmailAddress NVARCHAR(50),
	@ClientIdCard NVARCHAR(50),
	@ClientPhone NVARCHAR(25),
	@ClientPhoneType NVARCHAR(25),
	@ClientCaseWorker int,
	@ModuleId INT,
	@CreatedByUserID INT, 
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into dbo.GIBS_FBClients (
	ClientFirstName, 
	ClientMiddleInitial, 
	ClientLastName, 
	ClientDOB, 
	ClientAddress, 
	ClientCity, 
	ClientState, 
	ClientZipCode, 
	ClientEmailAddress, 
    ClientIdCard, 
    ClientPhone, 
    ClientPhoneType, 
    ClientCaseWorker, 
    ModuleID, 
    CreatedOnDate, 
    CreatedByUserID, 
    PortalID
) 
values (
	@ClientFirstName, 
	@ClientMiddleInitial, 
	@ClientLastName, 
	@ClientDOB, 
	@ClientAddress, 
	@ClientCity, 
	@ClientState, 
	@ClientZipCode, 
	@ClientEmailAddress, 
    @ClientIdCard, 
    @ClientPhone, 
    @ClientPhoneType, 
    @ClientCaseWorker,
	@ModuleId,
	GETDATE(),
	@CreatedByUserID,
	@PortalID
)

select SCOPE_IDENTITY()
	
END

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Search]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_FBClients_Search]

	@PortalId int,
	@ClientLastName NVARCHAR(50),
	@ClientIdCard NVARCHAR(50)

as

SELECT      
		ClientID,
		ClientFirstName, 
		ClientMiddleInitial, 
		ClientLastName, 
		ClientDOB, 
		ClientAddress, 
		ClientCity, 
		ClientState, 
		ClientZipCode, 
		ClientEmailAddress, 
		ClientIdCard, 
		ClientPhone, 
        ClientPhoneType, 
        ClientCaseWorker, 
        cast(dbo.fn_GIBS_FBClients_GetAge(ClientDOB,GetDate()) as INT) AS ClientAge, 
        ModuleID, 
        GIBS_FBClients.CreatedOnDate, 
        GIBS_FBClients.CreatedByUserID, 
        GIBS_FBClients.LastModifiedByUserID, 
        GIBS_FBClients.LastModifiedOnDate, 
        PortalID,
        'CaseWorkerName' = Users.FirstName + ' ' + Users.LastName 

from dbo.GIBS_FBClients
left outer join Users on GIBS_FBClients.ClientCaseWorker = Users.UserId
where  PortalId = @PortalId and ClientLastName like @ClientLastName + '%' 
Order by ClientLastName

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GIBS_FBClients_Update] 
	
	@ClientID INT,
	@ClientFirstName NVARCHAR(30),
	@ClientMiddleInitial NVARCHAR(15),
	@ClientLastName NVARCHAR(30),
	@ClientDOB date,
	@ClientAddress NVARCHAR(50),
	@ClientCity NVARCHAR(50),
	@ClientState NVARCHAR(20),
	@ClientZipCode NVARCHAR(10),
	@ClientEmailAddress NVARCHAR(50),
	@ClientIdCard NVARCHAR(50),
	@ClientPhone NVARCHAR(25),
	@ClientPhoneType NVARCHAR(25),
	@ClientCaseWorker int,
	@ModuleId INT,
	@LastModifiedByUserID INT,
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

UPDATE    GIBS_FBClients
SET              
		ClientFirstName = @ClientFirstName, 
		ClientMiddleInitial = @ClientMiddleInitial, 
		ClientLastName = @ClientLastName, 
		ClientDOB = @ClientDOB, 
		ClientAddress = @ClientAddress, 
		ClientCity = @ClientCity, 
		ClientState = @ClientState, 
		ClientZipCode = @ClientZipCode, 
		ClientEmailAddress = @ClientEmailAddress, 
		ClientIdCard = @ClientIdCard, 
		ClientPhone = @ClientPhone, 
		ClientPhoneType = @ClientPhoneType, 
		ClientCaseWorker = @ClientCaseWorker, 
		ModuleID = @ModuleId, 		 
		LastModifiedByUserID = @LastModifiedByUserID, 
		LastModifiedOnDate = GETDATE(),
		PortalID = @PortalID
WHERE ClientID = @ClientID

	
END

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Visit_GetByID]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE procedure [dbo].[GIBS_FBClients_Visit_GetByID]

	@VisitID int

as
BEGIN 

	SELECT     
		VisitID, 
		VisitDate, 
		VisitNotes, 
		VisitNumBags, 
		ClientID, 
		CreatedOnDate, 
		CreatedByUserID, 
		LastModifiedByUserID, 
		LastModifiedOnDate
	from GIBS_FBClientsVisits
	where  VisitID = @VisitID


END


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Visit_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


-- SELECT     VisitID, VisitDate, VisitNotes, VisitNumBags, ClientID, CreatedOnDate, CreatedByUserID, LastModifiedByUserID, LastModifiedOnDate
-- FROM         GIBS_FBClientsVisits

CREATE PROCEDURE [dbo].[GIBS_FBClients_Visit_Insert] 
	

	@VisitDate date,
	@VisitNotes NTEXT,
	@VisitNumBags INT,
	@ClientID INT,
	@CreatedByUserID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into dbo.GIBS_FBClientsVisits (
	VisitDate, 
	VisitNotes, 
	VisitNumBags, 
	ClientID, 
	CreatedOnDate, 
	CreatedByUserID ,
	LastModifiedByUserID, 
	LastModifiedOnDate
) 
values (
	@VisitDate, 
	@VisitNotes, 
	@VisitNumBags, 
	@ClientID, 
	GETDATE(), 
	@CreatedByUserID,
	@CreatedByUserID,
	GETDATE()
)

select SCOPE_IDENTITY()
	
END


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Visit_List]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_FBClients_Visit_List]

	@ClientID int

as
BEGIN 

	SELECT     
		VisitID, 
		VisitDate, 
		VisitNotes, 
		VisitNumBags, 
		GIBS_FBClientsVisits.ClientID, 
		GIBS_FBClientsVisits.CreatedOnDate, 
		GIBS_FBClientsVisits.CreatedByUserID, 
		GIBS_FBClientsVisits.LastModifiedByUserID, 
		GIBS_FBClientsVisits.LastModifiedOnDate, 
		
		'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
		from GIBS_FBClientsVisits
		left outer join Users on GIBS_FBClientsVisits.CreatedByUserID = Users.UserId
		
		where  GIBS_FBClientsVisits.ClientID = @ClientID
		order by VisitDate desc

END

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBClients_Visit_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



-- SELECT     VisitID, VisitDate, VisitNotes, VisitNumBags, ClientID, CreatedOnDate, CreatedByUserID, LastModifiedByUserID, LastModifiedOnDate
-- FROM         GIBS_FBClientsVisits

CREATE PROCEDURE [dbo].[GIBS_FBClients_Visit_Update] 
	
	@VisitID int,
	@VisitDate date,
	@VisitNotes NTEXT,
	@VisitNumBags INT,
	@ClientID INT,
	@LastModifiedByUserID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	


UPDATE dbo.GIBS_FBClientsVisits
   SET VisitDate = @VisitDate
      ,VisitNotes = @VisitNotes
      ,VisitNumBags = @VisitNumBags
      ,ClientID = @ClientID

      ,LastModifiedByUserID = @LastModifiedByUserID
      ,LastModifiedOnDate = GETDATE()

where VisitID = @VisitID


	
END






GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBInvoice_GetByID]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBInvoice_GetByID]

	@ModuleId int,
	@InvoiceID int

as

BEGIN 

	SELECT     InvoiceID, InvoiceNumber, InvoiceDate, 
		
		SupplierID,
		ModuleID,  
	GIBS_FBInvoices.CreatedOnDate, GIBS_FBInvoices.CreatedByUserID, 
	GIBS_FBInvoices.LastModifiedByUserID, GIBS_FBInvoices.LastModifiedOnDate, PortalID,
	'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
	from GIBS_FBInvoices
	left outer join Users on GIBS_FBInvoices.CreatedByUserID = Users.UserId
	where  ModuleId = @ModuleId and InvoiceID = @InvoiceID

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBInvoice_GetInvoiceLineItems]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create procedure [dbo].[GIBS_FBInvoice_GetInvoiceLineItems]

	
	@InvoiceID int

as
BEGIN

SELECT     GIBS_FBLineItems.LineItemID, GIBS_FBLineItems.InvoiceID, 
		GIBS_FBLineItems.ProductID, GIBS_FBLineItems.Cases, GIBS_FBLineItems.CountPerCase, 
        GIBS_FBLineItems.PricePerCase, GIBS_FBProducts.ProductName
FROM         GIBS_FBLineItems INNER JOIN
                      GIBS_FBProducts ON GIBS_FBLineItems.ProductID = GIBS_FBProducts.ProductID


	where  InvoiceID = @InvoiceID
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBInvoice_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GIBS_FBInvoice_Insert] 
	
	 @InvoiceNumber NVARCHAR(50), 
	 @InvoiceDate DATETIME,
	 @SupplierID INT,
	 
	@CreatedByUserID INT, 
	@ModuleId INT, 
	@PortalID INT

	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

INSERT INTO GIBS_FBInvoices
          (InvoiceNumber, 
          InvoiceDate, 
          SupplierID, 
          ModuleID, 
          CreatedOnDate, 
          CreatedByUserID, 
          PortalID)
VALUES     (@InvoiceNumber,
			@InvoiceDate,
			@SupplierID,
			@ModuleId,
			GETDATE(),
			@CreatedByUserID,
			@PortalID)


select SCOPE_IDENTITY()
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBInvoice_List]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBInvoice_List]

	@ModuleId int

as
BEGIN 

	SELECT     InvoiceID, InvoiceNumber, InvoiceDate, 
	
	GIBS_FBInvoices.SupplierID,
	GIBS_FBInvoices.ModuleID, 
	GIBS_FBInvoices.CreatedOnDate, GIBS_FBInvoices.CreatedByUserID, 
	GIBS_FBInvoices.LastModifiedByUserID, GIBS_FBInvoices.LastModifiedOnDate, 
	GIBS_FBInvoices.PortalID,GIBS_FBSuppliers.SupplierName,
	'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
	from GIBS_FBInvoices
	left outer join Users on GIBS_FBInvoices.CreatedByUserID = Users.UserId
	left outer join GIBS_FBSuppliers on GIBS_FBInvoices.SupplierID = GIBS_FBSuppliers.SupplierID
	where  GIBS_FBInvoices.ModuleId = @ModuleId
	order by InvoiceDate desc

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBInvoice_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GIBS_FBInvoice_Update] 
	
	@InvoiceID INT,
	 @InvoiceNumber NVARCHAR(50), 
	 @InvoiceDate DATETIME,
	 @SupplierID INT,
	@ModuleId INT,
	@LastModifiedByUserID INT, 
	@PortalID INT

	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

UPDATE    GIBS_FBInvoices
SET              
InvoiceNumber = @InvoiceNumber, 
InvoiceDate = @InvoiceDate, 
SupplierID = @SupplierID, 
ModuleID = @ModuleId, 
LastModifiedByUserID = 	@LastModifiedByUserID, 
LastModifiedOnDate = GETDATE(), 
PortalID = @PortalID

   where  ModuleId = @ModuleId AND InvoiceID = @InvoiceID
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBLineItems_Delete]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBLineItems_Delete]

	@LineItemID       int

as

BEGIN

DELETE FROM GIBS_FBLineItems
WHERE     (LineItemID = @LineItemID)

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBLineItems_GetByID]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBLineItems_GetByID]

	@LineItemID int

as

BEGIN 

SELECT     
LineItemID,
InvoiceID,
ProductID,
Cases,
CountPerCase,
PricePerCase
from  GIBS_FBLineItems

where  LineItemID = @LineItemID 

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBLineItems_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[GIBS_FBLineItems_Insert] 
	@InvoiceID INT, 
	@ProductID NVARCHAR(50), 
	@Cases INT, 
	@CountPerCase INT,  
	@PricePerCase MONEY

	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

INSERT INTO GIBS_FBLineItems
                      ( 
                      InvoiceID, 
                      ProductID, 
                      Cases, 
                      CountPerCase, 
                      PricePerCase)
VALUES     (@InvoiceID,
@ProductID,
@Cases,
@CountPerCase,
@PricePerCase)


	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBLineItems_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBLineItems_Update] 
	@LineItemID INT, 
	@InvoiceID INT, 
	@ProductID NVARCHAR(50), 
	@Cases INT, 
	@CountPerCase INT,  
	@PricePerCase MONEY
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	
UPDATE    GIBS_FBLineItems
SET              InvoiceID = @InvoiceID, 
ProductID = @ProductID, 
Cases =@Cases, 
CountPerCase = @CountPerCase, 
PricePerCase = @PricePerCase
		
		WHERE  LineItemID = @LineItemID
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProductCategories_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBProductCategories_Insert] 
	@CreatedByUserID INT, 
	@ModuleId INT, 
	@ProductCategory NVARCHAR(50), 	
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into dbo.GIBS_FBProductCategory (
	ProductCategory,
	ModuleID,
	CreatedOnDate,
	CreatedByUserID,
	PortalID
) 
values (
	@ProductCategory,
	@ModuleId,
	GETDATE(),
	@CreatedByUserID,
	@PortalID
)
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProductCategory_GetByID]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBProductCategory_GetByID]

	@ModuleId int,
	@ProductCategoryID int

as

SELECT     ProductCategoryID, ProductCategory,
 ModuleID, 
GIBS_FBProductCategory.CreatedOnDate, GIBS_FBProductCategory.CreatedByUserID, 
GIBS_FBProductCategory.LastModifiedByUserID, GIBS_FBProductCategory.LastModifiedOnDate, PortalID,
'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
from GIBS_FBProductCategory
left outer join Users on GIBS_FBProductCategory.CreatedByUserID = Users.UserId
where  ModuleId = @ModuleId and ProductCategoryID = @ProductCategoryID
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProductCategory_List]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBProductCategory_List]

	@ModuleId int

as

SELECT     
ProductCategoryID, ProductCategory, ModuleID, GIBS_FBProductCategory.CreatedOnDate, 
GIBS_FBProductCategory.CreatedByUserID, GIBS_FBProductCategory.LastModifiedByUserID, 
GIBS_FBProductCategory.LastModifiedOnDate, 
PortalID, 
'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
from dbo.GIBS_FBProductCategory
left outer join Users on GIBS_FBProductCategory.CreatedByUserID = Users.UserId
where  ModuleId = @ModuleId order by ProductCategory
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProductCategory_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBProductCategory_Update] 
	@ProductCategoryID INT, 
	@ModuleId INT, 
	@ProductCategory NVARCHAR(50), 
	@LastModifiedByUserID INT,
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	
	UPDATE dbo.GIBS_FBProductCategory
		SET 
		ProductCategory = @ProductCategory,
		LastModifiedByUserID = @LastModifiedByUserID,
		LastModifiedOnDate = GETDATE(),
		PortalID = @PortalID
		
		WHERE  ModuleId = @ModuleId
		and ProductCategoryID = @ProductCategoryID;
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_GetByID]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBProducts_GetByID]

	@ModuleId int,
	@ProductID int

as

BEGIN

	SELECT     ProductID, ProductName, CasePrice, 
	CaseCount, GIBS_FBProducts.ProductCategoryID, GIBS_FBProductCategory.ProductCategory,
	 GIBS_FBProducts.ModuleID, 
	GIBS_FBProducts.CreatedOnDate, GIBS_FBProducts.CreatedByUserID, 
	GIBS_FBProducts.LastModifiedByUserID, GIBS_FBProducts.LastModifiedOnDate, GIBS_FBProducts.PortalID,
	'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
	from GIBS_FBProducts 
	INNER JOIN
	GIBS_FBProductCategory ON GIBS_FBProducts.ProductCategoryID = GIBS_FBProductCategory.ProductCategoryID

	left outer join Users on GIBS_FBProducts.CreatedByUserID = Users.UserId
	where  GIBS_FBProducts.ModuleId = @ModuleId and GIBS_FBProducts.ProductID = @ProductID

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBProducts_Insert] 
	
	@ProductName NVARCHAR(50), 
	@CasePrice money,
	@CaseCount INT,
	@ProductCategoryID INT,
	@CreatedByUserID INT, 
	@ModuleId INT, 
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into dbo.GIBS_FBProducts (
	ProductName,
	CasePrice,
	CaseCount,
	ProductCategoryID,
	ModuleID,
	CreatedOnDate,
	CreatedByUserID,
	PortalID
) 
values (
	@ProductName,
	@CasePrice,
	@CaseCount,
	@ProductCategoryID,
	@ModuleId,
	GETDATE(),
	@CreatedByUserID,
	@PortalID
)

select SCOPE_IDENTITY()
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_List]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBProducts_List]

	@ModuleId int

as
BEGIN 

	SELECT     GIBS_FBProducts.ProductID, GIBS_FBProducts.ProductName, 
	GIBS_FBProducts.CasePrice, GIBS_FBProducts.CaseCount, 
	GIBS_FBProducts.ProductCategoryID, GIBS_FBProductCategory.ProductCategory,
	GIBS_FBProducts.ModuleID, GIBS_FBProducts.CreatedOnDate, 
	GIBS_FBProducts.CreatedByUserID, GIBS_FBProducts.LastModifiedByUserID, 
	GIBS_FBProducts.LastModifiedOnDate, GIBS_FBProducts.PortalID, 
	Users.FirstName + ' ' + Users.LastName AS 'CreatedByUserName'
                      
FROM         GIBS_FBProducts 
			INNER JOIN
            GIBS_FBProductCategory ON GIBS_FBProducts.ProductCategoryID = GIBS_FBProductCategory.ProductCategoryID
                      
              LEFT OUTER JOIN
             Users ON GIBS_FBProducts.CreatedByUserID = Users.UserID
WHERE     (GIBS_FBProducts.ModuleID = @ModuleId)
ORDER BY GIBS_FBProducts.ProductName

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBProducts_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBProducts_Update] 
	@ProductID INT,
	@ProductName NVARCHAR(50), 
	@CasePrice money,
	@CaseCount INT,
	@ProductCategoryID INT,
	@ModuleId INT, 
	@LastModifiedByUserID INT,
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	
	UPDATE dbo.GIBS_FBProducts
		SET 
		ProductName = @ProductName,
		CasePrice = @CasePrice,
		CaseCount = @CaseCount,
		ProductCategoryID = @ProductCategoryID,
		LastModifiedByUserID = @LastModifiedByUserID,
		LastModifiedOnDate = GETDATE(),
		PortalID = @PortalID
		
		WHERE  ModuleId = @ModuleId
		and ProductID = @ProductID;
	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBSuppliers_GetByID]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create procedure [dbo].[GIBS_FBSuppliers_GetByID]

	@ModuleId int,
	@SupplierID int

as

SELECT     SupplierID, SupplierName, GBFB, 
Address, City, State, Zip, 
SupplierPhone, Salesman, 
SalesmanPhone, ModuleID, 
GIBS_FBSuppliers.CreatedOnDate, GIBS_FBSuppliers.CreatedByUserID, 
GIBS_FBSuppliers.LastModifiedByUserID, GIBS_FBSuppliers.LastModifiedOnDate, PortalID,
'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
from GIBS_FBSuppliers
left outer join Users on GIBS_FBSuppliers.CreatedByUserID = Users.UserId
where  ModuleId = @ModuleId and SupplierID = @SupplierID
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBSuppliers_Insert]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBSuppliers_Insert] 
	@CreatedByUserID INT, 
	@ModuleId INT, 
	@SupplierName NVARCHAR(50), 
	@GBFB bit, 
	@Address NVARCHAR(50), 
	@City NVARCHAR(50), 
	@State NVARCHAR(50),
	@Zip NVARCHAR(50),
	@SupplierPhone NVARCHAR(50),
	@Salesman NVARCHAR(50),
	@SalesmanPhone NVARCHAR(50),
	
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	

insert into GIBS_FBSuppliers (
	SupplierName,
	GBFB,
	Address,
	City,
	State,
	Zip,
	SupplierPhone,
	Salesman,
	SalesmanPhone,
	ModuleID,
	CreatedOnDate,
	CreatedByUserID,
	PortalID
) 
values (
	@SupplierName,
	@GBFB,
	@Address,
	@City,
	@State,
	@Zip,
	@SupplierPhone,
	@Salesman,
	@SalesmanPhone,
	@ModuleId,
	GETDATE(),
	@CreatedByUserID,
	@PortalID
)


	
END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBSuppliers_List]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[GIBS_FBSuppliers_List]

	@ModuleId int

as
BEGIN 

	SELECT     SupplierID, SupplierName, GBFB, 
	Address, City, State, Zip, 
	SupplierPhone, Salesman, 
	SalesmanPhone, ModuleID, 
	GIBS_FBSuppliers.CreatedOnDate, GIBS_FBSuppliers.CreatedByUserID, 
	GIBS_FBSuppliers.LastModifiedByUserID, GIBS_FBSuppliers.LastModifiedOnDate, PortalID,
	'CreatedByUserName' = Users.FirstName + ' ' + Users.LastName
	from GIBS_FBSuppliers
	left outer join Users on GIBS_FBSuppliers.CreatedByUserID = Users.UserId
	where  ModuleId = @ModuleId
	order by SupplierName

END
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBSuppliers_Update]    Script Date: 01/27/2013 12:03:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GIBS_FBSuppliers_Update] 
	@SupplierID INT, 
	@ModuleId INT, 
	@SupplierName NVARCHAR(50), 
	@GBFB bit, 
	@Address NVARCHAR(50), 
	@City NVARCHAR(50), 
	@State NVARCHAR(50),
	@Zip NVARCHAR(50),
	@SupplierPhone NVARCHAR(50),
	@Salesman NVARCHAR(50),
	@SalesmanPhone NVARCHAR(50),
	@LastModifiedByUserID INT,
	@PortalID INT
	 
AS 
BEGIN 
	SET NOCOUNT ON;
	
	UPDATE dbo.GIBS_FBSuppliers
		SET [ModuleId] = @ModuleId,
		SupplierName = @SupplierName,
		GBFB = @GBFB,
		[Address] = @Address,
		City = @City,
		[State] = @State,
		Zip = @Zip,
		SupplierPhone = @SupplierPhone,
		Salesman = @Salesman,
		SalesmanPhone = @SalesmanPhone,
		LastModifiedByUserID = @LastModifiedByUserID,
		LastModifiedOnDate = GETDATE(),
		PortalID = @PortalID
		
		WHERE  ModuleId = @ModuleId
		and SupplierID = @SupplierID;
	
END
GO



/****** Object:  UserDefinedFunction [dbo].[fn_GIBS_FBClients_GetAge]    Script Date: 01/27/2013 12:07:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE function [dbo].[fn_GIBS_FBClients_GetAge]
 
(@in_DOB AS datetime,@now as datetime)
 

returns int
 
as

begin

DECLARE @age int
 

	IF cast(datepart(m,@now) as int) > cast(datepart(m,@in_DOB) as int)

	SET @age = cast(datediff(yyyy,@in_DOB,@now) as int)

	else

	IF cast(datepart(m,@now) as int) = cast(datepart(m,@in_DOB) as int)

	IF datepart(d,@now) >= datepart(d,@in_DOB)

	SET @age = cast(datediff(yyyy,@in_DOB,@now) as int)

	ELSE

	SET @age = cast(datediff(yyyy,@in_DOB,@now) as int) -1

	ELSE
	 
	SET @age = cast(datediff(yyyy,@in_DOB,@now) as int) - 1

	RETURN @age
end

GO





/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/